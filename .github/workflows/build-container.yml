name: Build and Push Docker image

on:
  push:
    branches: [ osg-alma8-testing ]
  repository_dispatch:
    types:
      - dispatch-build
  workflow_dispatch:

jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    steps:
    - name: make date tag
      id: mkdatetag
      run: echo "::set-output name=dtag::$(date +%Y%m%d-%H%M)"

  build:
    runs-on: ubuntu-latest
    needs: [make-date-tag]
    strategy:
      fail-fast: False
      matrix:
        dver: ['el7', 'el8', 'al8']
        repo: ['devel', 'testing', 'release']
        series: ['3.6']
    steps:
    - uses: actions/checkout@v2

    - name: Generate tag list
      id: generate-tag-list
      env:
        OS_VER: ${{ matrix.dver }}
        BASE_YUM_REPO: ${{ matrix.repo }}
        OSG_RELEASE: ${{ matrix.series }}
        TIMESTAMP: ${{ needs.make-date-tag.outputs.dtag }}
      run: |
        docker_repo=${GITHUB_REPOSITORY/opensciencegrid\/docker-/opensciencegrid/}
        tags=()
        for registry in hub.opensciencegrid.org docker.io; do
          tags+=( $registry/$docker_repo:$OSG_RELEASE-$BASE_YUM_REPO-$OS_VER )
          if [[ $OS_VER == '8' ]]; then
            tags+=( $registry/$docker_repo:$OSG_RELEASE-$BASE_YUM_REPO )
            if [[ $OS_VER == 'al8' ]]; then
              tags+=( $registry/$docker_repo:$OSG_RELEASE-$BASE_YUM_REPO )
              if [[ $BASE_YUM_REPO == 'release' ]]; then
                tags+=( $registry/$docker_repo:$OSG_RELEASE )
                [[ $OSG_RELEASE == '3.6' ]] && tags+=( $registry/$docker_repo:latest )
              else
                [[ $OSG_RELEASE == '3.6' ]] && tags+=( $registry/$docker_repo:$BASE_YUM_REPO )
              fi
            fi
            if [[ $BASE_YUM_REPO == 'release' ]]; then
              tags+=( $registry/$docker_repo:$OSG_RELEASE-$OS_VER )
            fi
          fi
        done
        tag_list=$(IFS=,; echo "${tags[*]}")
        echo "::set-output name=taglist::$tag_list"
    - id: generate-image-base
      env:
        DVER: ${{ matrix.dver }}
      run: |
        case "$DVER" in
          el9) image_base="quay.io/centos/centos:stream9";;
          el8) image_base="quay.io/centos/centos:stream8";;
          el7) image_base="docker.io/centos:centos7";;
          al8) image_base="quay.io/almalinux/almalinux:8";;
          *) echo "Unknown distro version: $DVER"; exit 1;;
        esac
        echo "::set-output name=imagebase::${image_base}"
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    


    - name: Build and push Docker images
      uses: docker/build-push-action@v2.2.0
      with:
        push: true
        build-args: |
          OS_VER=${{ matrix.dver }}
          IMAGE_BASE=${{ steps.generate-image-base.outputs.imagebase }}
          BASE_YUM_REPO=${{ matrix.repo }}
          OSG_RELEASE=${{ matrix.series }}
          BUILDDATE=${{ needs.make-date-tag.outputs.dtag }}
        tags: "${{ steps.generate-tag-list.outputs.taglist }}"
