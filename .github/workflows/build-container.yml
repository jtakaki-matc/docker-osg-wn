name: Build and Push Docker image

on:
  push:
    branches: [ master ]
  repository_dispatch:
    types:
      - dispatch-build
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        dver: ['el7', 'el8', 'al8']
        repo: ['devel', 'testing', 'release']
        series: ['3.6']
    steps:
      - id: custom-image-name
        env:
          SERIES: ${{ matrix.series }}
          REPO: ${{ matrix.repo }}
          OS: ${{ matrix.dver }}
        run: |
          PREFIX="output_image=${GITHUB_REPOSITORY}:${SERIES}"
          if [[ $OS == 'el8' ]]; then
            echo "${PREFIX}-${REPO}" >> ${GITHUB_OUTPUT}
          else
            echo "${PREFIX}-${OS}-${REPO}" >> ${GITHUB_OUTPUT}
          fi

 

    - id: generate-image-base
      env:
        DVER: ${{ matrix.dver }}
      run: |
        case "$DVER" in
          el9) image_base="quay.io/centos/centos:stream9";;
          el8) image_base="quay.io/centos/centos:stream8";;
          el7) image_base="docker.io/centos:centos7";;
          al8) image_base="quay.io/almalinux/almalinux:8";;
          *) echo "Unknown distro version: $DVER"; exit 1;;
        esac
        echo "::set-output name=imagebase::${image_base}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Log in to OSG Harbor
      uses: docker/login-action@v1
      with:
        registry: hub.opensciencegrid.org
        username: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
        password: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v2.2.0
      with:
        push: true
        build-args: |
          OS_VER=${{ matrix.dver }}
          IMAGE_BASE=${{ steps.generate-image-base.outputs.imagebase }}
          BASE_YUM_REPO=${{ matrix.repo }}
          OSG_RELEASE=${{ matrix.series }}
          BUILDDATE=${{ needs.make-date-tag.outputs.dtag }}
        tags: "${{ steps.generate-tag-list.outputs.taglist }}"
